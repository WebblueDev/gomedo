$input-color: $darker !default;
$input-placeholer-color: $dark !default;
$input-background-color: $lighter !default;
$input-border: 1px solid $light !default;
$input-border-small: 1px !default;
$input-shadow: none !default;

$input-padding-vertical: 0.5em !default;
$input-padding-horizontal: 1.1em !default;
$input-height: 2.25em !default;
$input-line-height: 1.25em !default;

$input-hover-color: inherit !default;
$input-hover-border: 1px solid $dark !default;

$input-focus-color: inherit !default;
$input-focus-border: 1px solid $dark !default;
$input-focus-box-shadow: none !default;

$input-active-color: inherit !default;
$input-active-border: 1px solid $dark !default;
$input-active-box-shadow: none !default;

$input-disabled-opacity: 0.6 !default;

$input-arrow: $primary !default;
$input-arrow-hover-color: $dark  !default;

$input-icon-color: $dark !default;
$input-icon-active-color: $darker !default;
$input-icon-width: 3em !default;

$input-radius: $border-radius-full !default;

$file-cta-background-color: $primary !default;
$file-cta-color: $white !default;
$file-cta-hover-color: darken($primary, $darkener) !default;
$file-cta-active-color: $file-cta-hover-color !default;
$file-name-border-color: #e6ecf0 !default;
$file-name-border-style: solid !default;
$file-name-border-width: 1px 1px 1px 0 !default;
$file-name-max-width: 16em !default;

$textarea-border-radius: $border-radius;

$label-color: $light !default;
$label-weight: $weight-bold !default;

$help-size: $size-small !default;

@mixin input-small {
  border-size: $input-border-small;
  font-size: $size-small;
  font-weight: $weight-normal;
  padding-bottom: calc(#{$input-padding-vertical} - #{$input-border-small});
  padding-left: calc(#{$input-padding-horizontal} - #{$input-border-small});
  padding-right: calc(#{$input-padding-horizontal} - #{$input-border-small});
  padding-top: calc(#{$input-padding-vertical} - #{$input-border-small});
}

@mixin input-medium {
  font-size: $size-medium;
}

@mixin input-large {
  font-size: $size-large;
}

@mixin input {
  @include appearance();
  align-items: center;
  border: $input-border;
  border-radius: $input-radius;
  display: inline-flex;
  font-size: $size-normal;
  background: $input-background-color;
  height: $input-height;
  justify-content: flex-start;
  line-height: $input-line-height;
  padding-bottom: $input-padding-vertical;
  padding-left: $input-padding-horizontal;
  padding-right: $input-padding-horizontal;
  padding-top: $input-padding-vertical;
  position: relative;
  vertical-align: top;

    @include placeholder {
      color: $input-placeholer-color;
    }
    &:hover,
    &.is-hovered {
      border: $input-hover-border;
      color: $input-hover-color;
    }
    &:focus,
    &.is-focused {
      border: $input-focus-border;
      box-shadow: $input-focus-box-shadow;
      color: $input-focus-color;
      outline: none;
    }
    &:active,
    &.is-active {
      border: $input-active-border;
      box-shadow: $input-active-box-shadow;
      color: $input-active-color;
      outline: none;
    }
    &[disabled] {
      opacity: $input-disabled-opacity;
      border: inherit;
      cursor: not-allowed;
    }
}

.input,
.textarea {
  @include input;

  box-shadow: $input-shadow;
  max-width: 100%;
  width: 100%;

  // Colors
  @each $name, $pair in $colors {
    $color: nth($pair, 1);

    &.is-#{$name} {
      border-color: $color;

      &:focus,
      &.is-focused,
      &:active,
      &.is-active {
        border-color: $color;
      }
    }
  }

  // Sizes
  &.is-small {
    @include input-small;
  }

  &.is-medium {
    @include input-medium;
  }

  &.is-large {
    @include input-large;
  }

  // Modifiers
  &.is-fullwidth {
    display: block;
    width: 100%;
  }

  &.is-inline {
    display: inline;
    width: auto;
  }
}

.input {
  &.is-static {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    padding-left: 0;
    padding-right: 0;
  }
}

.textarea {
  display: block;
  max-width: 100%;
  min-width: 100%;
  padding: $input-padding-vertical $input-padding-horizontal;
  resize: vertical;
  border-radius: $textarea-border-radius;

  &:not([rows]) {
    max-height: 600px;
    min-height: 120px;
  }

  &[rows] {
    height: unset;
  }

  // Modifiers
  &.has-fixed-size {
    resize: none;
  }
}

.checkbox,
.radio {
  cursor: pointer;
  display: inline-block;
  line-height: 1.25;
  position: relative;

  input {
    cursor: pointer;
  }

  input[type="checkbox"],
  input[type="radio"] {
    vertical-align: middle;
  }

  &:hover {
    color: $input-hover-color;
  }

  &[disabled] {
    opacity: $input-disabled-opacity;
    cursor: not-allowed;
    border: inherit;
  }
}

.radio {
  & + .radio {
    margin-left: 0.5em;
  }
}

.select {
  display: inline-block;
  width: 100%;
  position: relative;
  vertical-align: top;

  &:not(.is-multiple) {
    height: $input-height;

    &::after {
      border: 1px solid $input-arrow;
      border-right: 0;
      border-top: 0;
      content: " ";
      display: block;
      height: 0.5em;
      pointer-events: none;
      position: absolute;
      transform: rotate(-45deg);
      transform-origin: center;
      width: 0.5em;
      margin-top: -0.375em;
      right: 1.125em;
      top: 50%;
      z-index: 4;
    }
  }

  select {
    @include input;

    cursor: pointer;
    display: block;
    font-size: 1em;
    width: 100%;
    outline: none;

    &::-ms-expand {
      display: none;
    }

    &:not([multiple]) {
      padding-right: 2.5em;
    }

    &[multiple] {
      height: unset;
      padding: 0;

      option {
        padding: 0.5em 1em;
      }
    }
  }

  // States
  &:hover {
    &::after {
      border-color: $input-arrow-hover-color;
    }
  }

  // Colors
  @each $name, $pair in $colors {
    $color: nth($pair, 1);

    &.is-#{$name} select {
      border-color: $color;

      &:focus,
      &.is-focused {
        box-shadow: $input-focus-box-shadow;
      }
      &:active,
      &.is-active {
        box-shadow: $input-active-box-shadow;
      }
    }
  }

  // Sizes
  &.is-small {
    @include input-small;
  }

  &.is-medium {
    @include input-medium;
  }

  &.is-large {
    @include input-large;
  }

  // Modifiers
  &.is-disabled {
    &::after {
      opacity: $input-disabled-opacity;
    }
  }

  &.is-fullwidth {
    width: 100%;

    select {
      width: 100%;
    }
  }

  &.is-loading {
    &::after {
      @include loader;

      margin-top: 0;
      position: absolute;
      right: 0.625em;
      top: 0.625em;
      transform: none;
    }

    &.is-small:after {
      font-size: $size-small;
    }

    &.is-medium:after {
      font-size: $size-medium;
    }

    &.is-large:after {
      font-size: $size-large;
    }
  }
}

.file {
  @include unselectable;

  align-items: stretch;
  display: flex;
  justify-content: flex-start;
  position: relative;

  // Colors
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      .file-cta {
        background-color: $color;
        border-color: transparent;
        color: $color-invert;
      }

      &:hover,
      &.is-hovered {
        .file-cta {
          background-color: darken($color, $darkener);
          border-color: transparent;
          color: $color-invert;
        }
      }

      &:focus,
      &.is-focused {
        .file-cta {
          border-color: transparent;
          box-shadow: $input-focus-box-shadow;
          color: $color-invert;
        }
      }

      &:active,
      &.is-active {
        .file-cta {
          background-color: darken($color, $darkener);
          border-color: transparent;
          color: $color-invert;
          box-shadow: $input-active-box-shadow;
        }
      }
    }
  }

  // Sizes
  &.is-small {
    font-size: $size-small;
  }

  &.is-medium {
    font-size: $size-medium;

    .file-icon {
      font-size: 21px;
    }
  }

  &.is-large {
    font-size: $size-large;

    .file-icon {
      font-size: 28px;
    }
  }

  // Modifiers
  &.has-name {
    .file-cta {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }

    .file-name {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }

    &.is-empty {
      .file-cta {
        border-radius: $input-radius;
      }

      .file-name {
        display: none;
      }
    }
  }

  &.is-centered {
    justify-content: center;
  }

  &.is-right {
    justify-content: flex-end;
  }

  &.is-boxed {
    .file-label {
      flex-direction: column;
    }

    .file-cta {
      flex-direction: column;
      height: auto;
      padding: 1em 3em;
    }

    .file-name {
      border-width: 0 1px 1px;
    }

    .file-icon {
      height: 1.5em;
      width: 1.5em;
      font-size: 21px;
    }

    &.is-small {
      .file-icon {
        font-size: 14px;
      }
    }

    &.is-medium {
      .file-icon {
        font-size: 28px;
      }
    }

    &.is-large {
      .file-icon {
        font-size: 35px;
      }
    }

    &.has-name {
      .file-cta {
        border-radius: $input-radius $input-radius 0 0;
      }

      .file-name {
        border-radius: 0 0 $input-radius $input-radius;
        border-width: 0 1px 1px;
      }
    }
  }

  &.is-right {
    .file-cta {
      border-radius: 0 $input-radius $input-radius 0;
    }

    .file-name {
      border-radius: $input-radius 0 0 $input-radius;
      border-width: 1px 0 1px 1px;
      order: -1;
    }
  }

  &.is-fullwidth {
    .file-label {
      width: 100%;
    }

    .file-name {
      flex-grow: 1;
      max-width: none;
    }
  }
}

.file-label {
  align-items: stretch;
  display: flex;
  cursor: pointer;
  justify-content: flex-start;
  overflow: hidden;
  position: relative;

  &:hover {
    .file-cta {
      background-color: darken($file-cta-background-color, $darkener);
      color: $file-cta-hover-color;
    }

    .file-name {
      border-color: darken($file-name-border-color, $darkener);
    }
  }

  &:active {
    .file-cta {
      background-color: darken($file-cta-background-color, $darkener);
      color: $file-cta-active-color;
    }

    .file-name {
      border-color: darken($file-name-border-color, $darkener);
    }
  }
}

.file-input {
  height: 0.01em;
  left: 0;
  outline: none;
  position: absolute;
  top: 0;
  width: 0.01em;
}

.file-cta,
.file-name {
  @include appearance();
  align-items: center;
  border: $input-border;
  border-radius: $input-radius;
  display: inline-flex;
  font-size: $size-normal;
  height: 2.25em;
  justify-content: flex-start;
  line-height: 1.5;
  padding-bottom: $input-padding-vertical;
  padding-left: $input-padding-horizontal;
  padding-right: $input-padding-horizontal;
  padding-top: $input-padding-vertical;
  position: relative;
  vertical-align: top;
  white-space: nowrap;
}

.file-cta {
  background-color: $file-cta-background-color;
  color: $file-cta-color;
}

.file-name {
  display: block;
  max-width: $file-name-max-width;
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
}

.file-icon {
  align-items: center;
  display: flex;
  height: 1em;
  justify-content: center;
  margin-right: 0.5em;
  width: 1em;
  font-size: 14px;
}

.label {
  color: $label-color;
  display: block;
  font-size: $size-small;
  font-weight: $label-weight;
  padding-left: calc(#{$input-padding-horizontal} + 2px);

  &:not(:last-child) {
    margin-bottom: 0.3em;
  }

  // Sizes
  &.is-small {
    font-size: $size-small;
  }

  &.is-medium {
    font-size: $size-medium;
  }

  &.is-large {
    font-size: $size-large;
  }
}

.help {
  display: block;
  font-size: $help-size;
  margin-top: 0.25rem;
  padding-left: calc(#{$input-padding-horizontal} + 2px);

  @each $name, $pair in $colors {
    $color: nth($pair, 1);

    &.is-#{$name} {
      color: $color;
    }
  }
}

// Containers

.field {
  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }

  // Modifiers
  &.has-addons {
    display: flex;
    justify-content: flex-start;

    .control {
      &:not(:last-child) {
        margin-right: -1px;
      }

      &:first-child {
        .button,
        .input,
        .select select {
          border-bottom-left-radius: $input-radius;
          border-top-left-radius: $input-radius;
        }
      }

      &:last-child {
        .button,
        .input,
        .select select {
          border-bottom-right-radius: $input-radius;
          border-top-right-radius: $input-radius;
        }
      }

      .button,
      .input,
      .select select {
        border-radius: 0;

        &:hover,
        &.is-hovered {
          z-index: 2;
        }

        &:focus,
        &.is-focused,
        &:active,
        &.is-active {
          z-index: 3;

          &:hover {
            z-index: 4;
          }
        }
      }

      &.is-expanded {
        flex-grow: 1;
      }
    }

    &.has-addons-centered {
      justify-content: center;
    }

    &.has-addons-right {
      justify-content: flex-end;
    }

    &.has-addons-fullwidth {
      .control {
        flex-grow: 1;
        flex-shrink: 0;
      }
    }
  }

  &.is-grouped {
    display: flex;
    justify-content: flex-start;

    & > .control {
      flex-shrink: 0;

      &:not(:last-child) {
        margin-bottom: 0;
        margin-right: 0.75rem;
      }

      &.is-expanded {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }

    &.is-grouped-centered {
      justify-content: center;
    }

    &.is-grouped-right {
      justify-content: flex-end;
    }

    &.is-grouped-multiline {
      flex-wrap: wrap;

      & > .control {
        &:last-child,
        &:not(:last-child) {
          margin-bottom: 0.75rem;
        }
      }

      &:last-child {
        margin-bottom: -0.75rem;
      }

      &:not(:last-child) {
        margin-bottom: 0;
      }
    }
  }

  &.is-horizontal {
    @include tablet {
      display: flex;
    }
  }
}

.field-label {
  .label {
    font-size: inherit;
  }

  @include mobile {
    margin-bottom: 0.5rem;
  }


  @include tablet {
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 0;
    margin-right: 1.5rem;
    text-align: right;

    &.is-small {
      font-size: $size-small;
      padding-top: 0.375em;
    }

    &.is-normal {
      padding-top: 0.375em;
    }

    &.is-medium {
      font-size: $size-medium;
      padding-top: 0.375em;
    }

    &.is-large {
      font-size: $size-large;
      padding-top: 0.375em;
    }
  }
}

.field-body {
  .field .field {
    margin-bottom: 0;
  }

  @include tablet {
    display: flex;
    flex-basis: 0;
    flex-grow: 5;
    flex-shrink: 1;

    .field {
      margin-bottom: 0;
    }

    & > .field {
      flex-shrink: 1;

      &:not(.is-narrow) {
        flex-grow: 1;
      }

      &:not(:last-child) {
        margin-right: 0.75rem;
      }
    }
  }
}

.control {
  font-size: $size-normal;
  position: relative;
  text-align: left;

  // Modifiers
  // DEPRECATED
  &.has-icon {
    .icon {
      color: $input-icon-color;
      height: $input-height;
      pointer-events: none;
      position: absolute;
      top: 0;
      width: $input-icon-width;
      z-index: 4;
    }

    .input {
      &:focus {
        & + .icon {
          color: $input-icon-active-color;
        }
      }

      &.is-small {
        & + .icon {
          font-size: $size-small;
        }
      }

      &.is-medium {
        & + .icon {
          font-size: $size-medium;
        }
      }

      &.is-large {
        & + .icon {
          font-size: $size-large;
        }
      }
    }

    &:not(.has-icon-right) {
      .icon {
        left: 0;
      }

      .input {
        padding-left: $input-icon-width;
      }
    }

    &.has-icon-right {
      .icon {
        right: 0;
      }

      .input {
        padding-right: $input-icon-width;
      }
    }
  }

  &.has-icons-left,
  &.has-icons-right {
    .input,
    .select {
      &:focus {
        & ~ .icon {
          color: $input-icon-active-color;
        }
      }

      &.is-small ~ .icon {
        font-size: $size-small;
      }

      &.is-medium ~ .icon {
        font-size: $size-medium;
      }

      &.is-large ~ .icon {
        font-size: $size-large;
      }
    }

    .icon {
      color: $input-icon-color;
      height: 2.25em;
      pointer-events: none;
      position: absolute;
      top: 0;
      width: $input-icon-width;
      z-index: 4;
    }
  }

  &.has-icons-left {
    .input,
    .select select {
      padding-left: $input-icon-width;
    }

    .icon.is-left {
      left: 0;
    }
  }

  &.has-icons-right {
    .input,
    .select select {
      padding-right: $input-icon-width;
    }

    .icon.is-right {
      right: 0;
    }
  }

  &.is-loading {
    &::after {
      @include loader;

      position: absolute !important;
      right: 0.625em;
      top: 0.625em;
    }

    &.is-small:after {
      font-size: $size-small;
    }

    &.is-medium:after {
      font-size: $size-medium;
    }

    &.is-large:after {
      font-size: $size-large;
    }
  }
}
